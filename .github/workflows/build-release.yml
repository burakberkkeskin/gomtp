name: Build and release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: 'Get Metadata'
        id: metadata
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch --tags --force
          previousTag=$(git tag --sort=-v:refname | grep -v '\-beta' | grep -v '\-alpha' | head -n 2 | tail -n 1)
          version=$(git describe --tags --abbrev=0)
          commitId=$(git --no-pager log -1 --oneline | awk '{print $1}')
          releaseBinary=true
          if [[ "${version}" == *"beta"* || "${version}" == *"alpha"* ]]; then
            echo "Tag contains beta or alpha, skipping release."
            releaseBinary=false
          fi
          echo "previousTag=$previousTag" >> "$GITHUB_OUTPUT"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "commitId=$commitId" >> "$GITHUB_OUTPUT"
          echo "releaseBinary=$releaseBinary" >> "$GITHUB_OUTPUT"

      - name: Binary Build
        run: |
          mkdir build
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-X gomtp/cmd.version=$version -X gomtp/cmd.commitId=$commitId" -o build/gomtp-Linux-x86_64 -v .
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "-X gomtp/cmd.version=$version -X gomtp/cmd.commitId=$commitId" -o build/gomtp-Linux-arm64 -v .
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags "-X gomtp/cmd.version=$version -X gomtp/cmd.commitId=$commitId" -o build/gomtp-Darwin-x86_64 -v . 
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags "-X gomtp/cmd.version=$version -X gomtp/cmd.commitId=$commitId" -o build/gomtp-Darwin-arm64 -v .
        env:
          version: ${{ steps.metadata.outputs.version }}
          commitId: ${{ steps.metadata.outputs.commitId }}

      - name: '✏️ Generate release changelog'
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          sinceTag: ${{ steps.metadata.outputs.previousTag }}

      - name: 'Check changelog'
        run: |
          changelogFile="CHANGELOG.md"
          sed -i "s/Unreleased/$tag/g" "$changelogFile"
          sed -i 's#https://github.com/safderun/gomtp/compare/$tag...HEAD#https://github.com/safderun/gomtp/tree/$tag#g' "$changelogFile"
          grep -v "was automatically generated by" "$changelogFile" > "$changelogFile".temp && mv "$changelogFile".temp "$changelogFile"
        env:
          tag: ${{ steps.metadata.outputs.previousTag }}

      - name: Release
        if: steps.metadata.outputs.releaseBinary == 'true'
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            build/gomtp-Linux-x86_64
            build/gomtp-Linux-arm64
            build/gomtp-Darwin-x86_64
            build/gomtp-Darwin-arm64
